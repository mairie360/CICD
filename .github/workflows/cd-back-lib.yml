name: Back lib CD

on:
  workflow_call:
    secrets:
      MAIRIE_360_DEPLOY_TOKEN:
        required: false
      CARGO_REGISTRY_TOKEN:
        required: true

jobs:
  check_validity:
    uses: ./.github/workflows/ci-back-lib.yml

  publish_release:
    runs-on: ubuntu-latest
    needs: check_validity
    env:
      REPO: ${{ github.repository }}
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Get latest GitHub release version
        id: get_release
        run: |
          VERSION=$(curl -s https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest | jq -r .tag_name)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Extract version from Cargo.toml
        id: extract_version
        run: |
          VERSION=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].version')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Compare GitHub release and Cargo.toml version
        id: check_version
        run: |
          if [ "${VERSION}" != "v${{ steps.extract_version.outputs.version }}" ]; then
            echo "GitHub release version ($VERSION) and Cargo.toml version (v${{ steps.extract_version.outputs.version }}) do not match"
            exit 1
          fi

      - name: Cargo publish dry run
        run: |
          cargo publish --dry-run

      - name: Cargo publish
        run: |
          cargo publish --token $CARGO_REGISTRY_TOKEN
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
