name: Back lib CD

on:
  workflow_call:
    secrets:
      POSTMAN_API_KEY:
        required: false
      DEPLOY_SSH_KEY:
        required: false
      MAIRIE_360_DEPLOY_TOKEN:
        required: false

jobs:
  check_validity:
    uses: ./.github/workflows/ci-back-lib.yml

  publish_release:
    runs-on: ubuntu-latest
    env:
      REPO: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Extract version from Cargo.toml
        id: extract_version
        run: |
          VERSION=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].version')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        run: |
          TAG="v${{ steps.extract_version.outputs.version }}"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO/releases/tags/$TAG")
          echo "exists=false" >> $GITHUB_OUTPUT
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.check_release.outputs.exists == 'false'
        run: |
          gh release create "v${{ steps.extract_version.outputs.version }}" \
            --title "Release v${{ steps.extract_version.outputs.version }}" \
            --notes "Automated release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.publish_release.outputs.version }}
      MAIRIE_360_DEPLOY_TOKEN: ${{ secrets.MAIRIE_360_DEPLOY_TOKEN }}
    steps:
      - uses: actions/checkout@v4  # checkout lib repo

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq openssh-client

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-keyscan mairie360-eip.fr >> ~/.ssh/known_hosts
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Configure Git for pushing to index
        run: |
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Run publish script
        run: ./ci-tools/scripts/publish.sh $VERSION
        env:
          MAIRIE_360_DEPLOY_TOKEN: ${{ secrets.MAIRIE_360_DEPLOY_TOKEN }}
